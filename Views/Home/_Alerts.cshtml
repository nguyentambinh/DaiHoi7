@* File: Views/Shared/_Alerts.cshtml *@
@* Partial View này hiển thị thông báo thành công (TempData) và lỗi logic/validation (ViewData/ModelState) *@

@* --- HIỂN THỊ THÔNG BÁO THÀNH CÔNG (từ TempData sau Redirect) --- *@
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <strong>Thành công!</strong> @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@* --- HIỂN THỊ LỖI LOGIC/CẢNH BÁO (từ ViewData["ErrorMessage"] - khi return View) --- *@
@if (ViewData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <strong>Lỗi!</strong> @ViewData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@* --- HIỂN THỊ LỖI MODELSTATE CHUNG (Lỗi Validation bắt buộc - khi return View) --- *@
@* Kiểm tra nếu có bất kỳ lỗi nào trong ModelState (thường là lỗi validation khi thiếu trường Required) *@
@if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
{
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        <strong>Lỗi Validation:</strong> Vui lòng kiểm tra lại các trường nhập liệu bị đánh dấu đỏ.
        @* Tùy chọn: Bỏ dòng này nếu bạn không muốn hiển thị lỗi validation summary: *@
        @* @Html.ValidationSummary(false, null, new { @class = "text-danger" }) *@
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
